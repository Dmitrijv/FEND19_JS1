/*

Skapa ett HTML-element med f√∂ljande inneh√•ll: üëå
Om anv√§ndaren trycker ned musen (mousedown) p√• elementet skall elementet f√∂lja efter muspekaren
(mousemove) fram till att anv√§ndaren sl√§pper musklicket (mouseup).

Tips:
Ge elementet en stor fontSize s√• att ikonen blir stor.
Elementet kommer beh√∂va ha position: absolute.

Det finns en cursor-property som g√∂r att du kan byta vilken muspekarikon som anv√§nds ovanf√∂r elementet, anv√§nd ‚Äúpointer‚Äù.
Lyssna efter mousedown p√• elementet, men lyssna efter mousemove och mouseup p√• document.
Anv√§nd en variabel (isDrawing) f√∂r att h√•lla reda p√• om elementet skall ‚Äúdras runt‚Äù eller inte.

 */


const icon = document.createElement("p");
icon.textContent = "üëå";
icon.cursor = "pointer";
icon.classList.add("icon");
document.querySelector("body").appendChild(icon);


let isDragging = false;
icon.addEventListener("mousedown", function(event) {
    isDragging = true;
});

document.addEventListener("mousemove", function(event) {

    if (isDragging){
        icon.style.left = event.clientX + 'px';
        icon.style.top = event.clientY + 'px';
    }
});

document.addEventListener("mouseup", function(event) {
    isDragging = false;
});


/*
tooltip.textContent = box.getAttribute("data-tooltip");
tooltip.classList.add("tooltip", "hidden");
box.appendChild(tooltip);

box.addEventListener("mouseenter", function(event) {
    tooltip.classList.remove("hidden");
});

box.addEventListener("mouseleave", function(event) {
    tooltip.classList.add("hidden");
});

*/